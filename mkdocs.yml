site_name: Instructor (openai_function_call)
site_description: Enhancing OpenAI function calling with Pydantic 
repo_name: instructor
repo_url: https://github.com/jxnl/instructor
site_url: https://jxnl.github.io/instructor
theme:
  name: material
  icon:
    repo: fontawesome/brands/github
  features:
    - navigation.instant
    - navigation.instant.prefetch
    - navigation.tabs
    - navigation.tabs.sticky
    - navigation.expand
    - navigation.path
    - content.tooltips
    - content.code.annotate
    - content.code.select
    - content.code.copy
    - navigation.footer
    - search.suggest
    - search.highlight
  palette:

    # Palette toggle for light mode
    - media: "(prefers-color-scheme: light)"
      scheme: default
      toggle:
        icon: material/brightness-7
        name: Switch to dark mode

    # Palette toggle for dark mode
    - media: "(prefers-color-scheme: dark)"
      scheme: slate
      toggle:
        icon: material/brightness-4
        name: Switch to light mode
markdown_extensions:
  - pymdownx.critic
  - pymdownx.caret
  - pymdownx.keys
  - pymdownx.mark
  - pymdownx.tilde
  - pymdownx.highlight:
      anchor_linenums: true
      line_spans: __span
      pygments_lang_class: true
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - pymdownx.superfences
  - attr_list
  - md_in_html
  - admonition
nav:
  - Introduction: 
      - Getting Started: 'index.md'
      - Prompt Engineering Tips: 'tips/index.md'
      - Helpers:
        - Reasking and Validation Overview: "reask_validation.md"
        - Multiple Extractions: "multitask.md"
        - Handling Missing Content: "maybe.md"
      - Philosophy: 'philosophy.md'
  - Cookbook:
    - Overview: 'examples/index.md'
    - Text Classification Techniques: 'examples/classification.md'
    - AI Self-Assessment: 'examples/self_critique.md'
    - Citation Retrieval via Regex: 'examples/exact_citations.md'
    - Knowledge Graph Generation: 'examples/knowledge_graph.md'
    - Entity Resolution: 'examples/entity_resolution.md'
    - Search Query Segmentation: 'examples/search.md'
    - Query Decomposition in One Go: 'examples/planning-tasks.md'
    - Working with Recursive Schemas: 'examples/recursive.md'
    - Table Extraction from Text: 'examples/autodataframe.md'
    - Action Item and Dependency Mapping: 'examples/action_items.md'
    - Multi-File Code Generation: 'examples/gpt-engineer.md'
    - PII Data Sanitization: 'examples/pii.md'
  - CLI Reference:
      - "Introduction": "cli/index.md"
      - "Usage Tracking": "cli/usage.md"
      - "Finetuning GPT": "cli/finetune.md"
  - API Reference:
      - 'Core Library': 'api.md'
      - "Prompting DSL: Intro": "writing-prompts.md"
      - "Prompting DSL Reference": "chat-completion.md"
  - Blog:
    - "blog/index.md"
  

plugins:
  - social
  - search
  - mkdocstrings:
      handlers:
        python:
          options:
            members_order: alphabetical
            allow_inspection: true
            show_bases: true
  - group:
      enabled: !ENV CI
      plugins:
        - optimize
        - minify
  - blog:
      enabled: !ENV CI
      blog_dir: "blog"
      blog_toc: true
      post_dir: blog/posts
      post_date_format: yyyy/MM/dd
      post_url_format: "{date}/{slug}"
extra:
  analytics:
    provider: google
    property: G-5CR8QXF5CN
  social:
    - icon: fontawesome/brands/twitter
      link: https://twitter.com/jxnlco
    - icon: fontawesome/brands/github
      link: https://github.com/jxnl
copyright: Copyright &copy; 2023 Jason Liu
extra_javascript:
  # - https://cdnjs.cloudflare.com/ajax/libs/pyodide/0.24.0/pyodide.js
  - https://cdn.jsdelivr.net/pyodide/v0.24.0a1/full/pyodide.js
  # - scripts/pyodide.min.js
  - scripts/interactive_code_blocks.js
